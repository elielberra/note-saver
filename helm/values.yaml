# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ""
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# Sets security rules like user, group, and permissions for a container
securityContext: {}
  # runAsUser: 1000
  # runAsGroup: 1000
  # allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #     - ALL

# Specifies the minimum and maximum CPU/memory the container can use
resources: {}

# Liveness and readiness probes: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  # httpGet sends HTTP request to check container health
  # httpGet:
  #   path: /
  #   port: http

  # exec runs a command inside container to check health
  # exec:
  #   command:
  #     - sh
  #     - -c
  #     - |
  #       nc -z -w 5 postgresql 5432

readinessProbe: {}

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Loads environment variables from ConfigMaps or Secrets into the container
envFrom: []
# envFrom:
#   - configMapRef:
#       name: foo-env

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # Some of the apps may not require a service for network communication
  enabled: false
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: "nginx"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts: []
      secretName: notesaver-tls
