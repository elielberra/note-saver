---
# Source: notesaver-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: client
  labels:
    helm.sh/chart: notesaver-service-1.0.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: client
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: client
---
# Source: notesaver-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    helm.sh/chart: notesaver-service-1.0.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: client
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: client
      app.kubernetes.io/instance: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: client
        app.kubernetes.io/instance: client
    spec:
      containers:
        - name: client
          image: "elober/notesaver-client:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: "0.5"
              memory: 0.5Gi
          volumeMounts:
            - mountPath: /usr/share/nginx/html/config.json
              name: client-config-volume
              subPath: config.json
      volumes:
        - configMap:
            name: client-config
          name: client-config-volume
---
# Source: notesaver-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "minikube.notesaver"
      secretName: notesaver-tls
  rules:
    - host: "minikube.notesaver"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: client
                port:
                  number: 80
