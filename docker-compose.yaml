services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  db:
    image: postgres
    container_name: db
    env_file:
      - ./db/.env
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
  server:
    build: ./server
    container_name: server
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
  client:
    build: ./client
    container_name: client
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl-certs/cert.pem:/root/ssl-certs/cert.pem
      - ./ssl-certs/cert-key.pem:/root/ssl-certs/cert-key.pem
    ports:
      - 8080:8080
    depends_on:
      - server
      - client
volumes:
  db_data:
